/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.10.1/samples
 */

plugins {
    id 'scala'
    id 'java'
    id 'com.diffplug.spotless' version "6.18.0"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    mavenCentral()
    mavenLocal()
    flatDir {
        dirs "libs"
    }
}

ext {
    scalaMajorVersion = "2.12"
    scalaMinorVersion = "19"
    sparkVersion = "3.5.0"
    sparkMajorVersion = "3.4"
    scalaTestVersion = "3.2.9"
    logVersion = "3.9.2"
    awsSdkVersion = "2.25.35"
}

dependencies {
    //Scala dependencies
    implementation "org.scala-lang:scala-library:${scalaMajorVersion}.${scalaMinorVersion}"
    implementation "org.scala-lang:scala-reflect:${scalaMajorVersion}.${scalaMinorVersion}"
    implementation "org.scala-lang:scala-compiler:${scalaMajorVersion}.${scalaMinorVersion}"
    compileOnly "org.scala-lang:scala-compiler:${scalaMajorVersion}.${scalaMinorVersion}"

    implementation platform("software.amazon.awssdk:bom:${project.ext.awsSdkVersion}")
    implementation "software.amazon.awssdk:glue"
    implementation "software.amazon.awssdk:sts"
    implementation "software.amazon.awssdk:s3"
    implementation "software.amazon.awssdk:sns"
    implementation "software.amazon.awssdk:iam"
    implementation "software.amazon.awssdk:dynamodb"
    implementation "software.amazon.awssdk:kms"
    implementation "software.amazon.awssdk:apache-client"

    //Scala logging
    implementation "com.typesafe:config:1.4.2"
    implementation "com.typesafe.scala-logging:scala-logging_${scalaMajorVersion}:${logVersion}"
//    //Scala autowiring dependencies
//    implementation "com.softwaremill.macwire:macros_${scalaMajorVersion}:2.2.5"
//    implementation "com.softwaremill.macwire:util_${scalaMajorVersion}:2.2.5"

    //Apache Spark dependencies
    implementation "org.apache.spark:spark-sql_${scalaMajorVersion}:${sparkVersion}"
    implementation "org.apache.spark:spark-launcher_${scalaMajorVersion}:${sparkVersion}"
    implementation "org.apache.spark:spark-catalyst_${scalaMajorVersion}:${sparkVersion}"
    implementation "org.apache.spark:spark-core_${scalaMajorVersion}:${sparkVersion}"

    //Apache Iceberg dependencies
    implementation 'org.apache.iceberg:iceberg-core:1.4.3'
    implementation 'org.apache.iceberg:iceberg-aws:1.4.0'
    implementation "org.apache.iceberg:iceberg-spark-runtime-${sparkMajorVersion}_${scalaMajorVersion}:1.4.0"
    implementation "org.apache.iceberg:iceberg-spark-extensions-${sparkMajorVersion}_${scalaMajorVersion}:1.4.0"

    //Runtime dependencies
    implementation "com.fasterxml.jackson.core:jackson-core:2.17.0"
    implementation "com.github.ben-manes.caffeine:caffeine:2.9.3"

    //Test dependencies

    //Scala test dependencies
    testImplementation "org.scalatest:scalatest_${scalaMajorVersion}:${scalaTestVersion}"

    // JUnit Platform dependencies
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testRuntimeOnly "co.helmethair:scalatest-junit-runner:0.1.10"

}

test {
    enabled = false
    useJUnitPlatform {
        includeEngines('scalatest', 'junit-jupiter')

        testLogging {
            events("passed", "skipped", "failed")
        }
    }
}

spotless {
    scala {
        scalafmt('3.0.0').configFile("$rootDir/.scalafmt.conf")
        target 'src/main/scala/**/*.scala', 'src/test/scala/**/*.scala'
    }
}

tasks.named("shadowJar")  {
    dependsOn 'spotlessApply'
    zip64= true
}

tasks.named("build") {
    dependsOn 'spotlessApply'
}